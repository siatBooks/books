{
    "sourceFile": "src/domain/dao/BookDao.java",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1743736871366,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1743736883771,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -80,9 +80,9 @@\n                         .isbn(rset.getString(\"isbn\"))\r\n                         .customerReviewRank(rset.getInt(\"customer_review_rank\"))\r\n                         .description(rset.getString(\"description\"))\r\n                         .link(rset.getString(\"link\"))\r\n-                        .bookType(rset.getString(\"book_type\"))\r\n+                        .bookType(rset.getString(\"status\"))\r\n                         .displayType(rset.getString(\"display_type\"))\r\n                         .coverImg(rset.getString(\"coverImg\"))\r\n                         .salesPoint(rset.getInt(\"sales_point\"))\r\n                         .categoryId(rset.getLong(\"category_id\"))\r\n"
                },
                {
                    "date": 1743737087479,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -80,9 +80,9 @@\n                         .isbn(rset.getString(\"isbn\"))\r\n                         .customerReviewRank(rset.getInt(\"customer_review_rank\"))\r\n                         .description(rset.getString(\"description\"))\r\n                         .link(rset.getString(\"link\"))\r\n-                        .bookType(rset.getString(\"status\"))\r\n+                        .bookType(rset.getString(\"book_type\"))\r\n                         .displayType(rset.getString(\"display_type\"))\r\n                         .coverImg(rset.getString(\"coverImg\"))\r\n                         .salesPoint(rset.getInt(\"sales_point\"))\r\n                         .categoryId(rset.getLong(\"category_id\"))\r\n"
                }
            ],
            "date": 1743736871366,
            "name": "Commit-0",
            "content": "package domain.dao;\r\n\r\nimport domain.dto.book.BookInfoDetailResponseDto;\r\nimport domain.dto.book.BookListItemDto;\r\n\r\nimport java.sql.Connection;\r\nimport java.sql.DriverManager;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport java.util.*;\r\n\r\npublic class BookDao extends ParentDao{\r\n    public List<BookListItemDto> selectBookList(String keyword) {\r\n        List list = new ArrayList<>();\r\n\r\n        Connection connection = null;\r\n        PreparedStatement preparedStatement = null;\r\n        String selectSQL = \"SELECT * FROM BOOK_INFO WHERE TITLE LIKE ?\";\r\n        ResultSet rset = null;\r\n\r\n        try {\r\n            connection = DriverManager.getConnection(URL, USER, PASSWORD);\r\n            preparedStatement = connection.prepareStatement(selectSQL);\r\n            preparedStatement.setString(1, \"%\" + keyword + \"%\");\r\n            rset = preparedStatement.executeQuery();\r\n            while (rset.next()) {\r\n                BookListItemDto bookListItemResponseDto = BookListItemDto.builder()\r\n                        .bookId(rset.getLong(\"book_id\"))\r\n                        .title(rset.getString(\"title\"))\r\n                        .author(rset.getString(\"author\"))\r\n                        .perdate(rset.getDate(\"perdate\"))\r\n                        .priceStandard(rset.getInt(\"price_standard\"))\r\n                        .priceSales(rset.getInt(\"price_sales\"))\r\n                        .isbn(rset.getString(\"isbn\"))\r\n                        .customerReviewRank(rset.getInt(\"customer_review_rank\"))\r\n                        .description(rset.getString(\"description\"))\r\n                        .link(rset.getString(\"link\"))\r\n                        .bookType(rset.getString(\"book_type\"))\r\n                        .displayType(rset.getString(\"display_type\"))\r\n                        .coverImg(rset.getString(\"coverImg\"))\r\n                        .salesPoint(rset.getInt(\"sales_point\"))\r\n                        .categoryId(rset.getLong(\"category_id\"))\r\n                        .build();\r\n                list.add(bookListItemResponseDto);\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        } finally {\r\n            try {\r\n                connection.close();\r\n            } catch (Exception e) {\r\n                throw new RuntimeException(e);\r\n            }\r\n        }\r\n        return list;\r\n    }\r\n\r\n    public List<BookListItemDto> selectBookListInBest(String keyword) {\r\n        List list = new ArrayList<>();\r\n\r\n        Connection connection = null;\r\n        PreparedStatement preparedStatement = null;\r\n        String selectSQL = \"SELECT * FROM BOOK_INFO bi FULL JOIN BOOK_ITEM bi2 ON(bi.BOOK_ID = bi2.BOOK_ID) WHERE DISPLAY_TYPE = 'BEST' AND TITLE LIKE ?\";;\r\n        \r\n        ResultSet rset = null;\r\n\r\n        try {\r\n            connection = DriverManager.getConnection(URL, USER, PASSWORD);\r\n            preparedStatement = connection.prepareStatement(selectSQL);\r\n            preparedStatement.setString(1, \"%\" + keyword + \"%\");\r\n            rset = preparedStatement.executeQuery();\r\n            while (rset.next()) {\r\n                BookListItemDto bookListItemResponseDto = BookListItemDto.builder()\r\n                        .bookId(rset.getLong(\"book_id\"))\r\n                        .title(rset.getString(\"title\"))\r\n                        .author(rset.getString(\"author\"))\r\n                        .perdate(rset.getDate(\"perdate\"))\r\n                        .priceStandard(rset.getInt(\"price_standard\"))\r\n                        .priceSales(rset.getInt(\"price_sales\"))\r\n                        .isbn(rset.getString(\"isbn\"))\r\n                        .customerReviewRank(rset.getInt(\"customer_review_rank\"))\r\n                        .description(rset.getString(\"description\"))\r\n                        .link(rset.getString(\"link\"))\r\n                        .bookType(rset.getString(\"book_type\"))\r\n                        .displayType(rset.getString(\"display_type\"))\r\n                        .coverImg(rset.getString(\"coverImg\"))\r\n                        .salesPoint(rset.getInt(\"sales_point\"))\r\n                        .categoryId(rset.getLong(\"category_id\"))\r\n                        .build();\r\n                list.add(bookListItemResponseDto);\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        } finally {\r\n            try {\r\n                connection.close();\r\n            } catch (Exception e) {\r\n                throw new RuntimeException(e);\r\n            }\r\n        }\r\n        return list;\r\n    }\r\n\r\n    public List<BookListItemDto> selectBookListInNew(String keyword) {\r\n        List list = new ArrayList<>();\r\n\r\n        Connection connection = null;\r\n        PreparedStatement preparedStatement = null;\r\n        String selectSQL = \"SELECT * FROM BOOK_INFO WHERE DISPLAY_TYPE = 'NEW' AND TITLE LIKE ?\";\r\n        ResultSet rset = null;\r\n\r\n        try {\r\n            connection = DriverManager.getConnection(URL, USER, PASSWORD);\r\n            preparedStatement = connection.prepareStatement(selectSQL);\r\n            preparedStatement.setString(1, \"%\" + keyword + \"%\");\r\n            rset = preparedStatement.executeQuery();\r\n            while (rset.next()) {\r\n                BookListItemDto bookListItemResponseDto = BookListItemDto.builder()\r\n                        .bookId(rset.getLong(\"book_id\"))\r\n                        .title(rset.getString(\"title\"))\r\n                        .author(rset.getString(\"author\"))\r\n                        .perdate(rset.getDate(\"perdate\"))\r\n                        .priceStandard(rset.getInt(\"price_standard\"))\r\n                        .priceSales(rset.getInt(\"price_sales\"))\r\n                        .isbn(rset.getString(\"isbn\"))\r\n                        .customerReviewRank(rset.getInt(\"customer_review_rank\"))\r\n                        .description(rset.getString(\"description\"))\r\n                        .link(rset.getString(\"link\"))\r\n                        .bookType(rset.getString(\"book_type\"))\r\n                        .displayType(rset.getString(\"display_type\"))\r\n                        .coverImg(rset.getString(\"coverImg\"))\r\n                        .salesPoint(rset.getInt(\"sales_point\"))\r\n                        .categoryId(rset.getLong(\"category_id\"))\r\n                        .build();\r\n                list.add(bookListItemResponseDto);\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        } finally {\r\n            try {\r\n                connection.close();\r\n            } catch (Exception e) {\r\n                throw new RuntimeException(e);\r\n            }\r\n        }\r\n        return list;\r\n    }\r\n\r\n\r\n    public Optional<BookInfoDetailResponseDto> selectBookDetail(int bookId) {\r\n        Optional<BookInfoDetailResponseDto> dto = Optional.empty();\r\n\r\n        Connection connection = null;\r\n        PreparedStatement preparedStatement = null;\r\n        String selectSQL = \"SELECT * FROM BOOK_INFO WHERE BOOK_ID = ?\";\r\n        ResultSet rset = null;\r\n\r\n        try {\r\n            connection = DriverManager.getConnection(URL, USER, PASSWORD);\r\n            preparedStatement = connection.prepareStatement(selectSQL);\r\n            preparedStatement.setInt(1, bookId);\r\n            rset = preparedStatement.executeQuery();\r\n            while (rset.next()) {\r\n                dto = Optional.of(BookInfoDetailResponseDto.builder()\r\n                        .bookId(rset.getLong(\"book_id\"))\r\n                        .title(rset.getString(\"title\"))\r\n                        .author(rset.getString(\"author\"))\r\n                        .perdate(rset.getDate(\"perdate\"))\r\n                        .priceStandard(rset.getInt(\"price_standard\"))\r\n                        .priceSales(rset.getInt(\"price_sales\"))\r\n                        .isbn(rset.getString(\"isbn\"))\r\n                        .customerReviewRank(rset.getInt(\"customer_review_rank\"))\r\n                        .description(rset.getString(\"description\"))\r\n                        .link(rset.getString(\"link\"))\r\n                        .bookType(rset.getString(\"book_type\"))\r\n                        .displayType(rset.getString(\"display_type\"))\r\n                        .coverImg(rset.getString(\"coverImg\"))\r\n                        .salesPoint(rset.getInt(\"sales_point\"))\r\n                        .categoryId(rset.getLong(\"category_id\"))\r\n                        .build());\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        } finally {\r\n            try {\r\n                connection.close();\r\n            } catch (Exception e) {\r\n                throw new RuntimeException(e);\r\n            }\r\n        }\r\n        return dto;\r\n    }\r\n}\r\n"
        }
    ]
}